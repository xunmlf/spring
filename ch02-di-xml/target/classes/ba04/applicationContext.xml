<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
    引用类型的自动注入：spring框架可以根据某些规则给引用类型赋值
    使用的规则常用的是:byName,byType.
    1.byName(按名称注入):java类引用数据类型的属性名和spring容器中(配置文件)<bean>的id名称一样，
                        且数据类型一致，这样的容器中的bean,spring能够赋值给引用类型。
       语法：<bean id="xxx" class="yyy" autowire="byName">
               简单数据类型赋值
            </bean>

    2.byType(按类型注入):java类引用数据类型的属性名和spring容器中(配置文件)<bean>的class属性
                        是同源关系这样的容器中的bean,spring能够赋值给引用类型。
            同源就是一类的意思：
              1.Java类中引用类型的数据类型和bean中class的值一样
              1.Java类中引用类型的数据类型和bean中class的值父子类关系
              1.Java类中引用类型的数据类型和bean中class的值接口和实现类关系的



    -->

    <!--byName-->
<!--    <bean id="myStudent" class="com.powernode.ba04.Student" autowire="byName">-->
<!--        <constructor-arg name="age" value="20"/>-->
<!--        <constructor-arg name="name" value="lisi"/>-->
<!--        &lt;!&ndash;引用类型&ndash;&gt;-->
<!--        &lt;!&ndash;<constructor-arg name="school" ref="mySchool"/>&ndash;&gt;-->
<!--    </bean>-->

    <bean id="myStudent2" class="com.powernode.ba04.Student" autowire="byType">
        <property name="name" value="清"/>
        <property name="age" value="22" />
        <!--引用类型-->
        <!--<constructor-arg name="school" ref="school"/>-->
    </bean>

    <bean id="school" class="com.powernode.ba04.School">
        <property name="name" value="清华大学"/>
        <property name="address" value="北京市海淀区"/>
    </bean>
</beans>